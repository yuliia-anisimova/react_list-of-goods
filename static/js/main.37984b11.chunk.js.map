{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleReversing","setState","handleAlphabetSorting","ALPHABET","handleLengthSorting","LENGTH","handleReseting","this","activeReset","goodsToDisplay","goods","visibleGoods","sort","firstGood","secondGood","localeCompare","length","reverse","getReorderedGoods","className","type","cn","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,gBAAkB,WAChB,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBARzB,EAYEK,sBAAwB,WACtB,EAAKD,SAAS,CACZH,SAAUL,EAASU,YAdzB,EAkBEC,oBAAsB,WACpB,EAAKH,SAAS,CACZH,SAAUL,EAASY,UApBzB,EAwBEC,eAAiB,WACf,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAElBE,EAIEO,KAJFP,gBACAE,EAGEK,KAHFL,sBACAE,EAEEG,KAFFH,oBACAE,EACEC,KADFD,eAGIE,GAA8B,IAAfX,GAAwBC,IAAaL,EAASM,KAE7DU,EAtEH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUD,EACZ,EADYA,WAENc,EAAY,YAAOD,GAgBzB,OAdIZ,IAAaL,EAASU,UACxBQ,EAAaC,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUE,cAAcD,MAGxBhB,IAAaL,EAASY,QACxBM,EAAaC,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUG,OAASF,EAAWE,UAG9BnB,GACFc,EAAaM,UAGRN,EAkDkBO,CACrBxB,EAAiB,CAAEI,WAAUD,eAG/B,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYvB,IAAaL,EAASU,WAEtCmB,QAASpB,EANX,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYvB,IAAaL,EAASY,SAEtCiB,QAASlB,EANX,4BAWA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAaxB,IAEjByB,QAAStB,EANX,qBAWCQ,GACC,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAShB,EAHX,sBAUJ,6BACE,6BACGG,EAAec,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBAhGtC,GAAyBC,aCtDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.37984b11.chunk.js","sourcesContent":["import { Component } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((firstGood, secondGood) => (\n      firstGood.localeCompare(secondGood)));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((firstGood, secondGood) => (\n      firstGood.length - secondGood.length));\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReversing = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleAlphabetSorting = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleLengthSorting = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleReseting = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const {\n      handleReversing,\n      handleAlphabetSorting,\n      handleLengthSorting,\n      handleReseting,\n    } = this;\n\n    const activeReset = (isReversed !== false || sortType !== SortType.NONE);\n\n    const goodsToDisplay = getReorderedGoods(\n      goodsFromServer, { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={handleAlphabetSorting}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={handleLengthSorting}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={handleReversing}\n          >\n            Reverse\n          </button>\n\n          {activeReset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleReseting}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goodsToDisplay.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}